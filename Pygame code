Pygame 10

import pygame

pygame.init()

win = pygame.display.set_mode((500, 480))

pygame.display.set_caption("Jason Fungâ€™s game")

walkRight = [pygame.image.load('R%s.png' % frame) for frame in range(1, 10)]
walkLeft = [pygame.image.load('L%s.png' % frame) for frame in range(1, 10)]
bg = pygame.image.load('bg.jpg')
char = pygame.image.load('standing.png')

clock = pygame.time.Clock()

bulletSound = pygame.mixer.Sound('bullet.wav')
hitSound = pygame.mixer.Sound('hit.wav')

music = pygame.mixer.Sound('music.wav')
music.play(-1)

score= 0

class player(object):
    def __init__(self, x,y,width,height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.vel = 5
        self.isJump = False
        self.left = False
        self.right = False
        self.walkCount = 0
        self.jumpCount = 10
        self.standing = True
        self.hitbox = (self.x + 17, self.y + 11, 29, 52)

    def draw(self,win):
        if self.walkCount + 1 >= 27:
            self.walkCount = 0

        if not (self.standing):
            if self.left:
                win.blit(walkLeft[self.walkCount // 3], (self.x, self.y))
                self.walkCount += 1
            elif self.right:
                win.blit(walkRight[self.walkCount // 3], (self.x, self.y))
                self.walkCount += 1
        else:
            if self.right:
                win.blit(walkRight[0], (self.x , self.y))
            else:
                win.blit(walkLeft[0], (self.x, self.y))
        self.hitbox = (self.x + 17, self.y + 11, 29, 52)
        #pygame.draw.rect(win, (255,0,0), self.hitbox, 2)

    def hit(self):
        self.isJump = False
        self.jumpCount = 10
        self.x = 100
        self.y = 410
        self.walkCount = 0
        font1 = pygame.font.SysFont('comiscans', 100)
        text = font1.render('-5', 1, (255,0,0))
        win.blit(text, (250 - (text.get_width()//2), 200))
        pygame.display.update()
        i = 0
        while i < 300:
            pygame.time.delay(10)
            i+= 1
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    i = 301
                    pygame.QUIT()


class projectile(object):
    def __init__(self,x,y,radius,color,facing):
        self.x = x
        self.y = y
        self.radius = radius
        self.color = color
        self.facing = facing
        self.vel = 8 * facing

    def draw(self, win):
        pygame.draw.circle(win,self.color, (self.x , self.y), self.radius)

class enemy(object):
    walkRight = [pygame.image.load('R%sE.png' % frame) for frame in range(1, 12)]
    walkLeft = [pygame.image.load('L%sE.png' % frame) for frame in range(1, 12)]

    def __init__(self, x,y,width,height,end):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.end = end
        self.path = [self.x , self.end]
        self.walkCount = 0
        self.vel = 3
        self.hitbox = (self.x + 17, self.y +2, 31, 57)
        self.health = 10
        self.visible = True

    def draw(self, win):
        self.move()
        if self.visible:
            if self.walkCount + 1 >= 33:
                self.walkCount = 0

            if self.vel > 0:
                win.blit(self.walkRight[self.walkCount //3], (self.x , self.y))
                self.walkCount += 1
            else:
                win.blit(self.walkLeft[self.walkCount // 3], (self.x, self.y))
                self.walkCount += 1

            pygame.draw.rect(win, (255,0,0), (self.hitbox[0], self.hitbox[1] -20, 50,10))
            pygame.draw.rect(win, (0,128,0), (self.hitbox[0], self.hitbox[1] -20, 50 - (5 * (10 - self.health)),10))
            self.hitbox = (self.x + 17, self.y +2, 31, 57)
            #pygame.draw.rect(win, (255, 0, 0), self.hitbox, 2)



    def move(self):
        if self.vel > 0:
            if self.x + self.vel < self.path[1]:
                self.x += self.vel
            else:
                self.vel = self.vel * -1
                self.walkCount = 0
        else:
            if self.x - self.vel > self.path[0]:
                self.x += self.vel
            else:
                self.vel = self.vel * -1
                self.walkCount = 0

    def hit(self):
        if self.health > 0:
            self.health -= 1
        else:
            self.visible = False
        print('bomb')

def redrawGameWindow():
    win.blit(bg, (0,0))
    text = font.render('Score: ' + str(score), 1 ,(0,0,0))
    win.blit(text, (370,10))
    guy.draw(win)
    gordon.draw(win)
    for bullet in bullets:
        bullet.draw(win)
    pygame.display.update()

#mainloop
font = pygame.font.SysFont('comicsans', 30, True)
guy = player(300,410,64,64)
gordon = enemy(100,410,64,64,450)
shootloop = 0
bullets = []
run = True
while run:
    clock.tick(27)

    if gordon.visible == True:
        if guy.hitbox[1] < gordon.hitbox[1] + gordon.hitbox[3] and guy.hitbox[1] + guy.hitbox[3] > gordon.hitbox[1]:
            if guy.hitbox[0] + guy.hitbox[2] > gordon.hitbox[0] and guy.hitbox[0] < gordon.hitbox[0] + gordon.hitbox[
                2]:
                guy.hit()
                score -= 5

    if shootloop > 0:
        shootloop += 1
    if shootloop > 3:
        shootloop =0

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    for bullet in bullets:
        if bullet.y - bullet.radius < gordon.hitbox[1] + gordon.hitbox[3] and bullet.y + bullet.radius > gordon.hitbox[1]:
            if bullet.x + bullet.radius > gordon.hitbox[0] and bullet.x - bullet.radius < gordon.hitbox[0] + gordon.hitbox[2]:
                hitSound.play()
                gordon.hit()
                score += 1
                bullets.pop(bullets.index(bullet))

        if bullet.x < 500 and bullet.x > 0:
            bullet.x += bullet.vel
        else:
            bullets.pop(bullets.index(bullet))

    keys = pygame.key.get_pressed()

    if keys[pygame.K_SPACE] and shootloop == 0:
        bulletSound.play()
        if guy.left:
            facing = -1
        else:
            facing = 1

        if len(bullets) < 10:
            bullets.append(projectile(round(guy.x + guy.width //2), round(guy.y + guy.height // 2), 6, (0,0,0),facing ))

        shootloop = 1

    if keys[pygame.K_LEFT] and guy.x > guy.vel:
        guy.x -= guy.vel
        guy.left = True
        guy.right = False
        guy.standing = False
    elif keys[pygame.K_RIGHT] and guy.x < 500 - guy.width - guy.vel:
        guy.x += guy.vel
        guy.left = False
        guy.right = True
        guy.standing = False
    else:
        guy.standing = True
        guy.walkCount = 0

    if not(guy.isJump):
        if keys[pygame.K_UP]:
            guy.isJump = True
            guy.right = False
            guy.left = False
            guy.walkCount = 0
    else:
        if guy.jumpCount >= -10:
            neg = 1
            if guy.jumpCount < 0:
                neg = -1
            guy.y -= (guy.jumpCount ** 2) // 2 * neg
            guy.jumpCount -= 1
        else:
            guy.isJump = False
            guy.jumpCount = 10

    redrawGameWindow()

pygame.quit()

